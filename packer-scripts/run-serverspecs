#!/usr/bin/env bash

main() {
  set -o errexit
  set -o xtrace
  shopt -s nullglob

  export CHEF_PATH='/opt/chefdk/bin:/opt/chefdk/embedded/bin:/opt/chef/bin'
  export PATH="$CHEF_PATH:$PATH"
  export DEBIAN_FRONTEND='noninteractive'
  export RUBYOPT='-W0'

  : ${PACKER_CHEF_PREFIX:=/tmp}
  : ${SPEC_RUN_WRAPPER:=sudo -u travis HOME=/home/travis --}

  __install_chefdk
  __create_sudo_bash
  __chown_travis_dirs ${PACKER_CHEF_PREFIX}

  for suite in $(echo ${SPEC_SUITES/,/ }) ; do
    __run_suite "${suite}" "${PACKER_CHEF_PREFIX}" "${SPEC_RUN_WRAPPER}"
  done

  __remove_chefdk
}

__install_chefdk() {
  if [[ -f /opt/chefdk/embedded/bin/rspec ]] ; then
    return
  fi

  curl -sSL 'https://downloads.chef.io/packages-chef-io-public.key' | \
    apt-key add -
  echo "deb https://packages.chef.io/current-apt $(lsb_release -cs) main" \
    > /etc/apt/sources.list.d/chef-current.list
  apt-get update -y
  apt-get install -y chefdk
}

__create_sudo_bash() {
  cat > /tmp/sudo-bash <<EOF
#!/usr/bin/env bash
exec sudo -- bash "\$@"
EOF
  chmod 0755 /tmp/sudo-bash
}

__remove_chefdk() {
  rm -f /etc/apt/sources.list.d/chef-current.list
  apt-get update -y
}

__run_suite() {
  local suite="${1}"
  local packer_chef_prefix="${2}"
  local run_wrapper="${3}"
  local cookbook_dir="$(
    __suite_cookbook_dir "${suite}" "${packer_chef_prefix}"
  )"
  pushd "${cookbook_dir}" &>/dev/null

  if [[ -d spec/bin ]] ; then
    __populate_spec_bin
  fi

  __run_suite_as_travis "${cookbook_dir}" "${run_wrapper}"

  popd &>/dev/null
}

__run_suite_as_travis() {
  local cookbook_dir="${1}"
  local run_wrapper="${2}"

  set +o errexit

  ${run_wrapper} bash -lc "
set -o xtrace

export PATH=\"${CHEF_PATH}:\$PATH\"
export TERM=xterm
export PACKER_BUILDER_TYPE="${PACKER_BUILDER_TYPE}"
export RUBYOPT="${RUBYOPT}"
unset GEM_PATH

cd ${cookbook_dir}
sh -e /etc/init.d/xvfb start || echo \"ignoring exit \$? from xvfb\"

set -o errexit
rspec ${SPEC_ARGS}
"
  local exit_code="$?"

  if [[ $exit_code != 0 ]] ; then
    echo "Spec suite exited with ${exit_code}" >&2
    if [[ -n ${SPEC_FAILURE_SLEEP_FOREVER} ]] ; then
      while true ; do
        date -u
        echo tick
        sleep ${SLEEPYTIME:-60}
      done
    fi
    exit ${exit_code}
  fi

  set -o errexit
}

__suite_cookbook_dir() {
  local suite="${1}"
  local packer_chef_prefix="${2}"
  local spec_dir="$(
    find ${packer_chef_prefix}/packer-chef-* \
      -wholename "*${suite}/spec" -type d | head -1
  )"
  dirname "${spec_dir}"
}

__populate_spec_bin() {
  curl -sSL \
    -o spec/bin/rabbitmqadmin \
    http://hg.rabbitmq.com/rabbitmq-management/raw-file/tip/bin/rabbitmqadmin
  chmod +x spec/bin/rabbitmqadmin
}

__chown_travis_dirs() {
  chown -R travis:travis ${1}/packer-chef-* /var/tmp
}

main "$@"
