#!/usr/bin/env bash
set -o errexit

main() {
  : "${AWS_ACCESS_KEY:=$AWS_ACCESS_KEY_ID}"
  : "${AWS_SECRET_KEY:=$AWS_SECRET_ACCESS_KEY}"
  export AWS_ACCESS_KEY_ID AWS_ACCESS_KEY
  export AWS_SECRET_ACCESS_KEY AWS_SECRET_KEY

  local template_name="${1}"
  local pt
  pt="$(dirname "$(dirname "${BASH_SOURCE[0]}")")"

  cd "${pt}"

  make
  make "${template_name}"

  if [[ ! "${TRAVIS_BUILD_DIR}" ]]; then
    exit 0
  fi

  echo "     Found \$TRAVIS_BUILD_DIR." >&2
  echo "     Copying metadata tarball to ${TRAVIS_BUILD_DIR}." >&2
  __copy_metadata_tarball "${pt}/tmp" "${TRAVIS_BUILD_DIR}" "${template_name}"
}

__copy_metadata_tarball() {
  local pttmp="${1}"
  local top="${2}"
  local template_name="${3}"

  local packer_build_image_name
  packer_build_image_name="$(
    cat "${pttmp}/${template_name}/latest-image-name" 2>/dev/null || echo empty
  )"
  touch "${pttmp}/image-metadata-${packer_build_image_name}.tar.bz2"
  cp "${pttmp}/image-metadata-${packer_build_image_name}.tar.bz2" \
    "${top}/image-metadata-${packer_build_image_name}.tar.bz2"

  echo "     Writing ${packer_build_image_name} to:" >&2
  echo "         ${top}/.packer-build-image-name" >&2
  echo "${packer_build_image_name}" >"${top}/.packer-build-image-name"
}

main "$@"
