#!/usr/bin/env bash

set -o errexit
set -o pipefail
shopt -s nullglob

main() {
  local image_metadata_tarball="${1}"
  local relbase="$(dirname "${image_metadata_tarball}")"
  local image_metadata_dir="${relbase}/$(basename "${image_metadata_tarball}" .tar.bz2)"
  local image_metadata_envdir="${image_metadata_dir}/env"
  local image_job_board_env="${image_metadata_dir}/job-board-register"
  local job_board_envdir="${relbase}/job-board-env"

  __load_envdir "${job_board_envdir}"

  [[ $JOB_BOARD_IMAGES_URL ]] || {
    __log 'error="missing $JOB_BOARD_IMAGES_URL"'
    exit 1
  }

  [[ $IMAGE_NAME ]] || {
    __log 'error="missing $IMAGE_NAME"'
    exit 1
  }

  if [[ -f "${image_metadata_tarball}" ]] ; then
    tar -C "${relbase}" -xjvf "${image_metadata_tarball}"
  fi

  if [[ -d "${image_metadata_envdir}" ]] ; then
    __load_envdir "${image_metadata_envdir}"
  else
    __log "msg=\"does not exist\" dir=${image_metadata_envdir}"
  fi

  if [[ -f "${image_job_board_env}" ]] ; then
    source "${image_job_board_env}"
  fi

  env | grep -E '^(PACKER|TRAVIS|TAGS|IMAGE_NAME)' | sort

  : ${TAGS:=nonempty:true}
  : ${GROUP:=$(__group)}
  : ${DIST:=$(__dist)}
  : ${OS:=$(__uname)}

  TAGS="${TAGS},os:${OS},group_${GROUP}:true,group:${GROUP},dist:${DIST}"
  TAGS="${TAGS},packer_templates_branch:${PACKER_TEMPLATES_BRANCH}"
  TAGS="${TAGS},packer_templates_sha:${PACKER_TEMPLATES_SHA}"
  TAGS="${TAGS},travis_cookbooks_branch:${TRAVIS_COOKBOOKS_BRANCH}"
  TAGS="${TAGS},travis_cookbooks_sha:${TRAVIS_COOKBOOKS_SHA}"

  if [[ $PACKER_BUILD_NAME ]] ; then
    TAGS="$TAGS,packer_build_name:$PACKER_BUILD_NAME"
  fi

  if [[ $PACKER_BUILDER_TYPE ]] ; then
    TAGS="$TAGS,packer_builder_type:$PACKER_BUILDER_TYPE"

    case "$PACKER_BUILDER_TYPE" in
      googlecompute) IMAGE_INFRA=gce ;;
      docker) IMAGE_INFRA=docker ;;
      vmware) IMAGE_INFRA=jupiterbrain ;;
    esac
  fi

  : ${IMAGE_INFRA:=local}

  local curl_params="infra=$(__uri_esc "${IMAGE_INFRA}")"
  curl_params="${curl_params}&name=$(__uri_esc "${IMAGE_NAME}")"
  curl_params="${curl_params}&tags=$(__uri_esc "${TAGS}")"

  __log "msg=\"registering with job board\"" \
    "name=${IMAGE_NAME} infra=${IMAGE_INFRA} tags=${TAGS}"
  __log "curl_params=\"${curl_params}\""

  curl -f -s -X POST "${JOB_BOARD_IMAGES_URL}?${curl_params}" | jq .
}

__group() {
  if [[ $TRAVIS_COOKBOOKS_BRANCH = ${TRAVIS_COOKBOOKS_EDGE_BRANCH:-master} && \
    ! ${TRAVIS_COOKBOOKS_SHA:-dirty} =~ dirty && \
    $PACKER_TEMPLATES_BRANCH = master && \
    ! ${PACKER_TEMPLATES_SHA:-dirty} =~ dirty ]] ; then
    echo edge
    return
  fi
  echo dev
}

__dist() {
  lsb_release -sc 2>/dev/null || sw_vers -productVersion 2>/dev/null
}

__uname() {
  local uname_lower=$(uname | tr '[:upper:]' '[:lower:]')
  if [[ $uname_lower = darwin ]] ; then
    echo osx
    return
  fi
  echo $uname_lower
}

__uri_esc() {
  echo "\"${1}\"" | jq -r '. | @uri'
}

__log() {
  echo "time=$(date -u +%Y-%m-%dT%H:%M:%SZ)" "$@"
}

__load_envdir() {
  for f in ${1}/* ; do
    __log "msg=\"loading $(basename $f)\""
    eval "export $(basename $f)='$(cat $f)'"
  done
}

main "$@"
